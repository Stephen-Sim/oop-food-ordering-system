/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.oop.food.ordering.system;

import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import static java.lang.System.err;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class AdminPanel extends javax.swing.JFrame {
    
    public FoodController controller = new FoodController();
    /**
     * Creates new form AdminPanel
     */
    public AdminPanel() {
        initComponents();
        foodId.setVisible(false);
        foodQuantity.setModel(new SpinnerNumberModel(0, 0, 100, 1));
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        foodPrice = new javax.swing.JTextField();
        foodType = new javax.swing.JComboBox<>();
        foodName = new javax.swing.JTextField();
        foodQuantity = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        foodTable = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        resetButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        foodId = new javax.swing.JLabel();
        backgroundLabel = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        reportMenuItem = new javax.swing.JMenuItem();
        logOutMenuItem = new javax.swing.JMenuItem();

        jTextField3.setText("jTextField3");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("FOOD ORDERING SYSTEM - ADMIN PANEL");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Food Type :");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 136, 107, 41));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Food Name :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 77, 107, 41));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Stock Quantity :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 255, 107, 41));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Food Price :");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 196, 107, 41));

        foodPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodPriceActionPerformed(evt);
            }
        });
        getContentPane().add(foodPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 206, 189, -1));

        foodType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "food", "drink" }));
        foodType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodTypeActionPerformed(evt);
            }
        });
        getContentPane().add(foodType, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 137, 189, 41));

        foodName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                foodNameActionPerformed(evt);
            }
        });
        getContentPane().add(foodName, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 87, 189, -1));
        getContentPane().add(foodQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(148, 265, 189, -1));

        foodTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "#", "Food Name", "Food Type", "Food Price", "Stock Quantity"
            }
        ));
        foodTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                foodTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(foodTable);
        if (foodTable.getColumnModel().getColumnCount() > 0) {
            foodTable.getColumnModel().getColumn(0).setMinWidth(0);
            foodTable.getColumnModel().getColumn(0).setPreferredWidth(0);
            foodTable.getColumnModel().getColumn(0).setMaxWidth(0);
            foodTable.getColumnModel().getColumn(1).setPreferredWidth(10);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(405, 6, 464, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Admin Panel");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 6, 317, 59));

        updateButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Edit.png"))); // NOI18N
        updateButton.setText("UPDATE");
        updateButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateButtonMouseClicked(evt);
            }
        });
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });
        getContentPane().add(updateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(187, 314, 138, 52));

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Confirm.png"))); // NOI18N
        saveButton.setText("SAVE");
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonMouseClicked(evt);
            }
        });
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        getContentPane().add(saveButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 314, 140, 52));

        resetButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Reset.png"))); // NOI18N
        resetButton.setText("RESET");
        resetButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetButtonMouseClicked(evt);
            }
        });
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        getContentPane().add(resetButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(187, 384, 138, 51));

        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Delete.png"))); // NOI18N
        deleteButton.setText("DELETE");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });
        getContentPane().add(deleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 384, 140, 52));

        foodId.setText("NULL");
        getContentPane().add(foodId, new org.netbeans.lib.awtextra.AbsoluteConstraints(358, 6, -1, -1));

        backgroundLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Admin Menu.jpeg"))); // NOI18N
        getContentPane().add(backgroundLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jMenu1.setText("Admin");

        reportMenuItem.setText("Report");
        reportMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reportMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(reportMenuItem);

        logOutMenuItem.setText("Log Out");
        logOutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutMenuItemActionPerformed(evt);
            }
        });
        jMenu1.add(logOutMenuItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateButtonActionPerformed

    private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resetButtonActionPerformed

    private void foodPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_foodPriceActionPerformed

    private void foodNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_foodNameActionPerformed

    private void foodTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_foodTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_foodTypeActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveButtonActionPerformed

    private void resetButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetButtonMouseClicked
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_resetButtonMouseClicked

    private void foodTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_foodTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel tableContent = (DefaultTableModel) foodTable.getModel();
        
        foodId.setText(tableContent.getValueAt(foodTable.getSelectedRow(), 0).toString());
        foodName.setText(tableContent.getValueAt(foodTable.getSelectedRow(), 2).toString());
        foodType.setSelectedIndex(tableContent.getValueAt(foodTable.getSelectedRow(), 3).toString().equals("food") ? 0 : 1);
        foodPrice.setText(tableContent.getValueAt(foodTable.getSelectedRow(), 4).toString());
        foodQuantity.setValue(tableContent.getValueAt(foodTable.getSelectedRow(), 5));
    }//GEN-LAST:event_foodTableMouseClicked

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
        // TODO add your handling code here:
        if(foodId.getText().equals("NULL"))
            JOptionPane.showMessageDialog(null, "Invalid Action!!"); 
        else
            controller.destroy(Integer.parseInt(foodId.getText()));
        
        clearForm();
        loadTable();
    }//GEN-LAST:event_deleteButtonMouseClicked

    private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked
        // TODO add your handling code here:
        try{
            if(foodName.getText().isEmpty() || foodPrice.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(null, "All Field are Required !!!");
            }
            else if(Float.parseFloat(foodPrice.getText()) <= 0 && (Integer) foodQuantity.getValue() < 0)
            {
                JOptionPane.showMessageDialog(null, "Invalid Input !!!");
            }
            else
            {
                int food_id = 0;
                String food_name = foodName.getText().toString().trim();
                String food_type = foodType.getSelectedItem().toString();
                float food_price = Float.parseFloat(foodPrice.getText());
                int food_quantity = (Integer) foodQuantity.getValue();

                controller.create(new Food(food_id, food_name, food_type, food_price, food_quantity));
            }
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Invalid Input !!!");
        }
        
        clearForm();
        loadTable();
    }//GEN-LAST:event_saveButtonMouseClicked

    private void updateButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateButtonMouseClicked
        // TODO add your handling code here:

        try{
            if(foodId.getText().equals("NULL") || foodName.getText().isEmpty() || foodPrice.getText().isEmpty())
            {
                JOptionPane.showMessageDialog(null, "All Field are Required!!!"); 
            }
            else if(Float.parseFloat(foodPrice.getText()) <= 0 && (Integer) foodQuantity.getValue() < 0)
            {
                JOptionPane.showMessageDialog(null, "Invalid Input !!!");
            }
            else
            {
                int food_id = Integer.parseInt(foodId.getText());
                String food_name = foodName.getText().toString().trim();
                String food_type = foodType.getSelectedItem().toString();
                float food_price = Float.parseFloat(foodPrice.getText());
                int food_quantity = (Integer) foodQuantity.getValue();

                controller.update(new Food(food_id, food_name, food_type, food_price, food_quantity));
            }
        }
        catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Invalid Input !!!");
        }
        
        clearForm();
        loadTable();
    }//GEN-LAST:event_updateButtonMouseClicked

    private void logOutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutMenuItemActionPerformed
        // TODO add your handling code here:
        close();
        new Menu().setVisible(true);
    }//GEN-LAST:event_logOutMenuItemActionPerformed

    private void reportMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportMenuItemActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new AdminViewOrderHisotry().setVisible(true);
    }//GEN-LAST:event_reportMenuItemActionPerformed
    
    public void clearForm(){
        foodId.setText("NULL");
        foodName.setText("");
        foodPrice.setText("");
        foodType.setSelectedIndex(0);
        foodQuantity.setValue(0);
    }
    private void loadTable(){
        ((DefaultTableModel) foodTable.getModel()).setNumRows(0);
        ArrayList <Food> foodList = new ArrayList();
        
        DecimalFormat df = new DecimalFormat("0.00");
       
        foodList = controller.fetchAll();
        
        DefaultTableModel tableContent = (DefaultTableModel) foodTable.getModel();
        
        Object rowData[] = new Object[6];
        
        for(int i = 0; i < foodList.size(); i++)
        {
            rowData[0] = foodList.get(i).getFoodId();
            rowData[1] = i + 1;
            rowData[2] = foodList.get(i).getFoodName();
            rowData[3] = foodList.get(i).getFoodType();
            rowData[4] = df.format(foodList.get(i).getFoodPrice());
            rowData[5] = foodList.get(i).getFoodQuantity();
            
            tableContent.addRow(rowData);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminPanel().setVisible(true);
            }
        });
    }
    
    public void close()
    {
        WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backgroundLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel foodId;
    private javax.swing.JTextField foodName;
    private javax.swing.JTextField foodPrice;
    private javax.swing.JSpinner foodQuantity;
    private javax.swing.JTable foodTable;
    private javax.swing.JComboBox<String> foodType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JMenuItem logOutMenuItem;
    private javax.swing.JMenuItem reportMenuItem;
    private javax.swing.JButton resetButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
